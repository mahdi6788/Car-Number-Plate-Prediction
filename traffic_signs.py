# -*- coding: utf-8 -*-
"""Traffic_signs.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1EE5LUWTlq2NcMk7IYHKO5bnJRzNtUg0u

# **Use Kaggle's datasets in Google Colab**

Step 1: Install Kaggle library
"""

!pip install kaggle

"""**Step 2: Generate Kaggle API Token**

Go to your Kaggle account settings (https://www.kaggle.com/account)
Scroll down to the "API" section and click on "Create New API Token"
A JSON file named kaggle.json will be downloaded. Make sure to keep it in a secure location.

**Step 3: Upload Kaggle API Token to Google Colab**
Choose the file you downloaded in Step 2.
"""

from google.colab import files
# Upload the Kaggle API token files
uploaded = files.upload()
!mkdir ~/.kaggle
!mv kaggle.json ~/.kaggle/
!chmod 600 ~/.kaggle/kaggle.json

"""**Step 4: Download Kaggle Dataset**
Go to the Kaggle website (https://www.kaggle.com/) and find the dataset you want to use.
Click on the "Copy API Command" button under the dataset's "Download" section.
In your Colab notebook, run the copied command in a code cell.
"""

!kaggle datasets download -d valentynsichkar/traffic-signs-dataset-in-yolo-format

"""**Step 5: Unzip the Dataset**"""

import zipfile
# Specify the path to the downloaded zip file
zip_path = "/content/traffic-signs-dataset-in-yolo-format.zip"
# Extract the contents of the zip file
with zipfile.ZipFile(zip_path, "r") as zip_ref:
  zip_ref.extractall("/content/traffic-signs-dataset-in-yolo-format")

"""# **Traffic signs detection using YOLOv5**"""

!python -m pip install --upgrade pip

import torch
from IPython.display import Image

!git clone https://github.com/ultralytics/yolov5.git

# Commented out IPython magic to ensure Python compatibility.
# %cd yolov5/

!pip install -r requirements.txt

import os
from random import choice
import shutil

# Separate image and text files
imgs = []
xmls = []

source_path = "/content/traffic-signs-dataset-in-yolo-format/ts/ts"

for subdirpath, subdirname, nondirname in os.walk(source_path):
  for filename in nondirname:
    if filename.endswith(".txt"):
      xmls.append(filename)
    else:
      imgs.append(filename)

print(len(imgs), len(xmls))

# Make train and validation directories 

trainimagepath = "/content/yolov5/data/train/images"
trainlabelpath = "/content/yolov5/data/train/labels"
valimagepath = "/content/yolov5/data/validation/images"
vallabelpath = "/content/yolov5/data/validation/labels"

if not os.path.exists(trainimagepath):
  os.makedirs(trainimagepath)
if not os.path.exists(trainlabelpath):
  os.makedirs(trainlabelpath)
if not os.path.exists(valimagepath):
  os.makedirs(valimagepath)
if not os.path.exists(vallabelpath):
  os.makedirs(vallabelpath)

# put corresponding image and text files into them
train_rate = 0.8
countForTrain = len(imgs) * train_rate
for x in range(int(countForTrain)):
  imgname = choice(imgs)  # random choice of image names from origin dir
  txtname = imgname[:-4] + ".txt"  # name of corresponding text files

  shutil.copy(os.path.join(source_path, imgname), os.path.join(trainimagepath, imgname))
  shutil.copy(os.path.join(source_path, txtname), os.path.join(trainlabelpath, txtname))

  imgs.remove(imgname)
  xmls.remove(txtname)

# making validation dir
val_rate = 0.2
countForVal = len(imgs) * val_rate
for x in range(int(countForVal)):
  imgname = choice(imgs)
  txtname = imgname[:-4] + ".txt"

  shutil.copy(os.path.join(source_path, imgname),os.path.join(valimagepath, imgname))
  shutil.copy(os.path.join(source_path, txtname),os.path.join(vallabelpath, txtname))

  imgs.remove(imgname)
  xmls.remove(txtname)

shutil.copy("/content/drive/MyDrive/Colab Notebooks/ComputerVision/Traffic_signs/dataset.yaml","/content/yolov5/data/dataset.yaml")

!python train.py --img 415 --batch 16 --epochs 50 --data dataset.yaml --weights yolov5m.pt --cache

# Commented out IPython magic to ensure Python compatibility.
# %load_ext tensorboard
# %tensorboard --logdir runs

!python detect.py --weights /content/yolov5/runs/train/exp2/weights/best.pt --source "/content/drive/MyDrive/Colab Notebooks/ComputerVision/Traffic_signs/multiple_road_signs.jpg"

!python detect.py --weights /content/yolov5/runs/train/exp/weights/best.pt --source /content/traffic-signs-dataset-in-yolo-format/traffic-sign-to-test.mp4